/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz.colaborador.administradores;

import estructuras.listas.dobles.circular.NodoDC_E;
import estructuras.listas.simples.ordenada.ListaSO_S;
import estructuras.listas.simples.ordenada.NodoSO_S;
import interfaz.colaborador.AreaColaborador;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import pojos.Edificio;

/**
 *
 * @author g
 */
public class Edificios extends javax.swing.JFrame {

    public DefaultListModel<String> listModelE;
    public static String salon_elegido;
    
    /**
     * Creates new form Edificios
     */
    public Edificios() {
        // Inicializando el modelo de la JList
        listModelE = new DefaultListModel<String>();
        // Llenando el modelo
        if(!estructuras.Estructuras.ldc_edificios.esVacia()){
            listModelE.addElement(String.valueOf(estructuras.Estructuras.
            ldc_edificios.getInicio().getEdificio().getNombre()));
            NodoDC_E auxiliar = estructuras.Estructuras.ldc_edificios.getInicio().getSiguiente();
            while(auxiliar != estructuras.Estructuras.ldc_edificios.getInicio()){
                listModelE.addElement(String.valueOf(auxiliar.getEdificio().getNombre()));
                auxiliar = auxiliar.getSiguiente();
            }
//            listModelE.addElement(String.valueOf(auxiliar.getEdificio().getNombre()));
        }
        initComponents();
        //Agregandolo a la JList
        edificios_list.setModel(listModelE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        edificios_titulo_lb = new javax.swing.JLabel();
        graficar_e_bt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        edificios_list = new javax.swing.JList<>();
        limpiar_e_bt = new javax.swing.JButton();
        eliminar_e_bt = new javax.swing.JButton();
        volver_e_bt = new javax.swing.JButton();
        nombre_e_txt = new javax.swing.JTextField();
        edificios_info_lb = new javax.swing.JLabel();
        nombre_e_lb = new javax.swing.JLabel();
        salones_lb = new javax.swing.JLabel();
        salones_cb = new javax.swing.JComboBox<>();
        crear_e_btn = new javax.swing.JButton();
        administrar_salon_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Edificios");

        edificios_titulo_lb.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        edificios_titulo_lb.setText("Administracion de edificios");

        graficar_e_bt.setText("Graficar");
        graficar_e_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficar_e_btActionPerformed(evt);
            }
        });

        edificios_list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        edificios_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                edificios_listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(edificios_list);

        limpiar_e_bt.setText("Limpiar");
        limpiar_e_bt.setToolTipText("");
        limpiar_e_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiar_e_btActionPerformed(evt);
            }
        });

        eliminar_e_bt.setText("Eliminar");
        eliminar_e_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_e_btActionPerformed(evt);
            }
        });

        volver_e_bt.setText("Volver");
        volver_e_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volver_e_btActionPerformed(evt);
            }
        });

        nombre_e_txt.setEditable(false);

        edificios_info_lb.setText("Elige la accion que deseas realizar");

        nombre_e_lb.setText("Nombre");

        salones_lb.setText("Salones");

        crear_e_btn.setText("Crear");
        crear_e_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crear_e_btnActionPerformed(evt);
            }
        });

        administrar_salon_btn.setText("Administrar salon");
        administrar_salon_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                administrar_salon_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(edificios_info_lb)
                        .addGap(18, 114, Short.MAX_VALUE)
                        .addComponent(graficar_e_bt))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(crear_e_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volver_e_bt))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edificios_titulo_lb)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(limpiar_e_bt)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                                        .addComponent(eliminar_e_bt))
                                    .addComponent(nombre_e_txt, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nombre_e_lb, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(salones_lb, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(salones_cb, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(administrar_salon_btn, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(edificios_titulo_lb)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(graficar_e_bt)
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(edificios_info_lb)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(nombre_e_lb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nombre_e_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(salones_lb)
                        .addGap(18, 18, 18)
                        .addComponent(salones_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(administrar_salon_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(limpiar_e_bt)
                            .addComponent(eliminar_e_bt)
                            .addComponent(volver_e_bt)
                            .addComponent(crear_e_btn))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actualizarList(){
        listModelE.clear();
        if(!estructuras.Estructuras.ldc_edificios.esVacia()){
            listModelE.addElement(String.valueOf(estructuras.Estructuras.
            ldc_edificios.getInicio().getEdificio().getNombre()));
            NodoDC_E auxiliar = estructuras.Estructuras.ldc_edificios.getInicio().getSiguiente();
            while(auxiliar != estructuras.Estructuras.ldc_edificios.getInicio()){
                listModelE.addElement(String.valueOf(auxiliar.getEdificio().getNombre()));
                auxiliar = auxiliar.getSiguiente();
            }
//            listModelE.addElement(String.valueOf(auxiliar.getEdificio().getNombre()));
        }
        edificios_list.setModel(listModelE);
    }
    
    public void limpiarTexts(){
        nombre_e_txt.setText("");
    }
    
    private void limpiar_e_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiar_e_btActionPerformed
        // TODO add your handling code here:
        nombre_e_txt.setEditable(true);
        limpiarTexts();
    }//GEN-LAST:event_limpiar_e_btActionPerformed

    private void crear_e_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crear_e_btnActionPerformed
        // TODO add your handling code here:
        if(!nombre_e_txt.getText().isEmpty()){
            if(!estructuras.Estructuras.ldc_edificios.buscar(nombre_e_txt.getText())){
                estructuras.Estructuras.ldc_edificios.insertar(new NodoDC_E
                (new Edificio(nombre_e_txt.getText()), null));
                
                JOptionPane.showMessageDialog(null, "Se ingreso correctamente el edificio con nombre: "
                + nombre_e_txt.getText() + ".", 
                "Muy bien", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "No se ingreso el edificio con nombre: "
                + nombre_e_txt.getText() + ", porque ya existe otro edificio con este nombre.", 
                "Atencion", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "¡Campo vacio", 
            "Atencion", JOptionPane.ERROR_MESSAGE);
        }
        actualizarList();
        nombre_e_txt.setEditable(false);
    }//GEN-LAST:event_crear_e_btnActionPerformed

    private void volver_e_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volver_e_btActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new AreaColaborador().setVisible(true);
    }//GEN-LAST:event_volver_e_btActionPerformed

    private void edificios_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_edificios_listMouseClicked
        // TODO add your handling code here:
        salones_cb.removeAllItems();
        String nombre_seleccionado = this.edificios_list.getSelectedValue();
        nombre_e_txt.setText(estructuras.Estructuras.ldc_edificios.
        buscarNodo(nombre_seleccionado).getEdificio().getNombre());
        try {
            if(!estructuras.Estructuras.ldc_edificios.buscarNodo(nombre_seleccionado).
            getSalones().esVacia() 
            || estructuras.Estructuras.ldc_edificios.buscarNodo(nombre_seleccionado).
            getSalones() != null){
                NodoSO_S auxiliar = estructuras.Estructuras.ldc_edificios.
                buscarNodo(nombre_seleccionado).getSalones().getInicio();
                while(auxiliar != null){
                    salones_cb.addItem(String.valueOf(auxiliar.getSalon().getNumero()));
                    auxiliar = auxiliar.getSiguiente();
                }
            }
        } catch (Exception e) {
            System.out.println("No tiene salones");
        }
        
    }//GEN-LAST:event_edificios_listMouseClicked

    private void graficar_e_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficar_e_btActionPerformed
        // TODO add your handling code here:
        if(!estructuras.Estructuras.ldc_edificios.esVacia()){
            try {
                estructuras.Estructuras.ldc_edificios.graficar("grafo");
            } catch (IOException ex) {
                Logger.getLogger(Edificios.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(Edificios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null, "¡No se han cargado edificios", 
            "Atencion", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_graficar_e_btActionPerformed

    private void eliminar_e_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_e_btActionPerformed
        // TODO add your handling code here:
        if(estructuras.Estructuras.ldc_edificios.eliminar(nombre_e_txt.getText())){
            JOptionPane.showMessageDialog(null, "Se ha eliminado el edificio con nombre: "
            + nombre_e_txt.getText(), 
            "Muy bien", JOptionPane.INFORMATION_MESSAGE);
            limpiarTexts();
        }else{
            JOptionPane.showMessageDialog(null, "¡No se pudo eliminar el edificio con nombre: "
            + nombre_e_txt.getText() + "!", 
            "Atencion", JOptionPane.ERROR_MESSAGE);
        }
        actualizarList();
    }//GEN-LAST:event_eliminar_e_btActionPerformed

    private void administrar_salon_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_administrar_salon_btnActionPerformed
        // TODO add your handling code here:
        if(salones_cb.getItemCount() > 0){
            salon_elegido = salones_cb.getSelectedItem().toString();
            Object[] opciones = {"Crear", "Modificar", "Eliminar"};
            int opcion_elegida;
            opcion_elegida = JOptionPane.showOptionDialog(null, 
                    "Salon", "Elige lo que deseas hacer.",
                    JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE,
                    null, opciones, opciones[0]);
         
            if(opcion_elegida == JOptionPane.YES_OPTION){
                this.setVisible(false);
                new Salones(nombre_e_txt.getText(), 0, "crear").setVisible(true);
            }else if(opcion_elegida == JOptionPane.NO_OPTION){
                this.setVisible(false);
                new Salones(nombre_e_txt.getText(), Integer.parseInt(salon_elegido), "modificar")
                .setVisible(true);
            }else if(opcion_elegida == JOptionPane.CANCEL_OPTION){
                if(!estructuras.Estructuras.ldc_edificios.
                buscarNodo(nombre_e_txt.getText()).getSalones().esVacia()){
                    if(estructuras.Estructuras.ldc_edificios.
                    buscarNodo(nombre_e_txt.getText()).getSalones().
                    eliminar(Integer.parseInt(salon_elegido))){
                        JOptionPane.showMessageDialog(null, "Se ha eliminado el salon con numero: "
                        + salon_elegido, 
                        "Muy bien", JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        JOptionPane.showMessageDialog(null, "¡No se pudo eliminar el salon con numero: "
                        + salon_elegido + "!", 
                        "Atencion", JOptionPane.ERROR_MESSAGE);
                    }
//                    this.setVisible(true);
                }else{
                    JOptionPane.showMessageDialog(null, "Este edificio no tiene salones", 
                    "Atencion", JOptionPane.WARNING_MESSAGE);
                }
            }
        }else{
            this.setVisible(false);
            new Salones(nombre_e_txt.getText(), 0, "crear").setVisible(true);
        }
        actualizarList();
    }//GEN-LAST:event_administrar_salon_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Edificios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Edificios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Edificios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Edificios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Edificios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton administrar_salon_btn;
    private javax.swing.JButton crear_e_btn;
    private javax.swing.JLabel edificios_info_lb;
    private javax.swing.JList<String> edificios_list;
    private javax.swing.JLabel edificios_titulo_lb;
    private javax.swing.JButton eliminar_e_bt;
    private javax.swing.JButton graficar_e_bt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpiar_e_bt;
    private javax.swing.JLabel nombre_e_lb;
    private javax.swing.JTextField nombre_e_txt;
    private javax.swing.JComboBox<String> salones_cb;
    private javax.swing.JLabel salones_lb;
    private javax.swing.JButton volver_e_bt;
    // End of variables declaration//GEN-END:variables
}
