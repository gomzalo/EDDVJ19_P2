/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import estructuras.arboles.avl.ArbolAVL;
import estructuras.listas.dobles.circular.ListaDC;
import estructuras.listas.dobles.circular.NodoDC;
import estructuras.listas.dobles.ordenada.ListaDO;
import estructuras.listas.dobles.ordenada.NodoDO;
import estructuras.listas.simples.ListaS;
import estructuras.listas.simples.NodoS;
import estructuras.listas.simples.ordenada.ListaSO_C;
import estructuras.listas.simples.ordenada.ListaSO_S;
import estructuras.listas.simples.ordenada.NodoSO_C;
import estructuras.listas.simples.ordenada.NodoSO_S;
import java.io.IOException;
import pojos.Asignacion;
import pojos.Catedratico;
import pojos.Curso;
import pojos.Edificio;
import pojos.Salon;
import pojos.Usuario;

/**
 *
 * @author g
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, InterruptedException {
// ::::::::::::::::::::::::::::::::     INICIA TEST    ::::::::::::::::::::::::::::::::
    // ||||||||||||||||||||||||||||     INICIA AVL      ||||||||||||||||||||||||||||
//        ArbolAVL catest = new ArbolAVL();
//        catest.insertar(new Catedratico(1, "Marioco", "Z1"));
//        catest.insertar(new Catedratico(10, "Rocio", "Z6"));
//        catest.insertar(new Catedratico(8, "Diana", "Z4"));
//        catest.insertar(new Catedratico(77, "Ruth", "Z2"));
//        catest.insertar(new Catedratico(100, "Claudia", "Z14"));
//        catest.insertar(new Catedratico(14, "Lady", "Z2"));
//        catest.insertar(new Catedratico(22, "Espino", "Z11"));
//        catest.insertar(new Catedratico(54, "Bertha", "Z8"));
//        catest.inorder();
//        catest.editar(10, "Martha", "Z22");
//        catest.inorder();
//        catest.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN AVL         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA LDC      ||||||||||||||||||||||||||||
//        ListaDC ldc = new ListaDC();
//        ldc.insertar(new NodoDC(new Edificio("T1")));
//        ldc.insertar(new NodoDC(new Edificio("T1")));
//        ldc.insertar(new NodoDC(new Edificio("T3")));
//        ldc.insertar(new NodoDC(new Edificio("S11")));
//        ldc.insertar(new NodoDC(new Edificio("T7")));
//        ldc.insertar(new NodoDC(new Edificio("T9")));
//        ldc.insertar(new NodoDC(new Edificio("M2")));
//        ldc.insertar(new NodoDC(new Edificio("Biblioteca central")));
//        ldc.insertar(new NodoDC(new Edificio("Iglu")));
//        ldc.mostrar();
//        ldc.eliminar("Biblioteca central");
//        ldc.eliminar("S11");
//        ldc.eliminar("T9");
//        ldc.mostrar();
//        ldc.modificar("T3", "T33");
//        ldc.mostrar();
//        ldc.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN LDC         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA LDO      ||||||||||||||||||||||||||||
//        ListaDO ldo = new ListaDO();
//        ldo.insertar(new NodoDO(new Usuario(2, "Mario", "Rockw8u28", "Colaborador")));
//        ldo.insertar(new NodoDO(new Usuario(1, "Ruth", "Love2999", "Usuario")));
//        ldo.insertar(new NodoDO(new Usuario(55, "Claudia", "Fisica12333", "Colaborador")));
////        ldo.insertar(new NodoDO(new Usuario(1, "Ruth", "Love2999", "Usuario")));
//        ldo.insertar(new NodoDO(new Usuario(1100, "Rocio", "Love292119", "Usuario")));
//        ldo.insertar(new NodoDO(new Usuario(34, "Diana", "Love299129", "Usuario")));
//        ldo.insertar(new NodoDO(new Usuario(13, "Lady", "dasoiio", "Colaborador")));
//        ldo.mostrar();
//        ldo.eliminar(1100);
//        ldo.eliminar(1);
//        ldo.eliminar(34);
////        ldo.eliminar(2);
//        ldo.mostrar();
//        ldo.modificar(55, "Claudio", "root289");
//        ldo.mostrar();        
//        ldo.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN LDO         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA LSOS      ||||||||||||||||||||||||||||
//        ListaSO_S lsos = new ListaSO_S();
//        lsos.insertar(new NodoSO_S(new Salon(110, "T4", 200)));
//        lsos.insertar(new NodoSO_S(new Salon(210, "T4", 200)));
//        lsos.insertar(new NodoSO_S(new Salon(310, "T4", 200)));
//        lsos.insertar(new NodoSO_S(new Salon(410, "T4", 200)));
//        lsos.insertar(new NodoSO_S(new Salon(114, "T4", 200)));
//        lsos.insertar(new NodoSO_S(new Salon(305, "T4", 200)));
//        lsos.mostrar();
//        lsos.modificar(310, "T44", 450);
//        lsos.eliminar(110);
//        lsos.eliminar(305);
//        lsos.eliminar(410);
//        lsos.mostrar();
//        lsos.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN LSOS         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA LSOC      ||||||||||||||||||||||||||||
//        ListaSO_C lsoc = new ListaSO_C();
//        lsoc.insertar(new NodoSO_C(new Curso(769, "EDD", 5, 5)));
//        lsoc.insertar(new NodoSO_C(new Curso(69, "COMPI1", 5, 5)));
//        lsoc.insertar(new NodoSO_C(new Curso(234, "Filosofia", 3, 5)));
//        lsoc.insertar(new NodoSO_C(new Curso(777, "IPC2", 3, 5)));
//        lsoc.insertar(new NodoSO_C(new Curso(937, "MA5", 6, 5)));
//        lsoc.mostrar();
//        lsoc.modificar(69, "Compiladores 1", 4, 6);
//        lsoc.eliminar(69);
//        lsoc.eliminar(769);
//        lsoc.eliminar(937);
//        lsoc.mostrar();
//        lsoc.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN LSOC         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA LS      ||||||||||||||||||||||||||||
//        ListaS lsa  = new ListaS();
//        lsa.insertar(new NodoS(new Asignacion(20138821, 455, 45, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20138821, 777, 65, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20148821, 23, 75, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20158821, 21, 37, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20168821, 655, 40, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20178821, 655, 40, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20188821, 655, 40, 20)));
//        lsa.mostrar();
////        lsa.eliminar(20138821);
//        lsa.eliminar(20158821);
//        lsa.eliminar(20188821);
//        lsa.modificar(20138821, 666, 75, 25);
//        lsa.mostrar();
//        lsa.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN LS         ||||||||||||||||||||||||||||
// ::::::::::::::::::::::::::::::::     FIN TEST    ::::::::::::::::::::::::::::::::
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
