/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import interfaz.root.Carga;
import estructuras.arboles.avl.ArbolAVL;
import estructuras.arboles.b.ArbolB;
import estructuras.listas.dobles.circular.ListaDC_E;
import estructuras.listas.dobles.circular.NodoDC_E;
import estructuras.listas.dobles.ordenada.ListaDO_U;
import estructuras.listas.dobles.ordenada.NodoDO_U;
import estructuras.listas.simples.ListaS;
import estructuras.listas.simples.NodoS;
import estructuras.listas.simples.ordenada.ListaSO_C;
import estructuras.listas.simples.ordenada.ListaSO_S;
import estructuras.listas.simples.ordenada.NodoSO_C;
import estructuras.listas.simples.ordenada.NodoSO_S;
import estructuras.tabla.hash.TablaHash;
import interfaz.colaborador.AreaColaborador;
import interfaz.estudiante.AreaEstudiante;
import java.io.IOException;
import javax.swing.JOptionPane;
import pojos.Asignacion;
import pojos.Catedratico;
import pojos.Curso;
import pojos.Edificio;
import pojos.Estudiante;
import pojos.Horario;
import pojos.Salon;
import pojos.Usuario;

/**
 *
 * @author g
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        login_titulo_lb = new javax.swing.JLabel();
        usuario_txt = new javax.swing.JTextField();
        id_usuario_lb = new javax.swing.JLabel();
        contrasena_usaurio_lb = new javax.swing.JLabel();
        login_bt = new javax.swing.JButton();
        contrasena_pass = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");

        login_titulo_lb.setFont(new java.awt.Font("DejaVu Sans", 0, 24)); // NOI18N
        login_titulo_lb.setText("¡Bienvenido!");

        usuario_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usuario_txtActionPerformed(evt);
            }
        });

        id_usuario_lb.setText("Ingresa tu codigo de usuario");

        contrasena_usaurio_lb.setText("Ingresa tu contraseña");

        login_bt.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        login_bt.setText("Login");
        login_bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_btActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(login_titulo_lb)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(contrasena_usaurio_lb)
                            .addComponent(usuario_txt, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(id_usuario_lb)
                            .addComponent(contrasena_pass))
                        .addGap(97, 97, 97))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(login_bt)
                        .addGap(172, 172, 172))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(login_titulo_lb)
                .addGap(25, 25, 25)
                .addComponent(id_usuario_lb)
                .addGap(18, 18, 18)
                .addComponent(usuario_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(contrasena_usaurio_lb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(contrasena_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(login_bt)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usuario_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usuario_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usuario_txtActionPerformed

    private void login_btActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_btActionPerformed
        // TODO add your handling code here:
        // Si es usuario root
        if(usuario_txt.getText().equals("root") && 
            contrasena_pass.getText().equals("root")){
            JOptionPane.showMessageDialog(null, "Bienvenido super usuario ggg");
            this.setVisible(false);
            new Carga().setVisible(true);
        }
        // Si no es usuario root, se verifica si hay usuarios cargados
        if(!estructuras.Estructuras.ldo_usuarios.esVacia()){
            // Se busca en la lista de usuarios
            if(estructuras.Estructuras.ldo_usuarios.
            buscar(Integer.parseInt(usuario_txt.getText()))){
                // Se verifica su contrasena
                if(estructuras.Estructuras.ldo_usuarios.buscarNodo(
                Integer.parseInt(usuario_txt.getText())).
                getUsuario().getContrasena().equals(contrasena_pass.getText())){
                    // Se verifica que tipo de usuario es
                    if(estructuras.Estructuras.ldo_usuarios.
                    buscarNodo(Integer.parseInt(usuario_txt.getText())).
                    getUsuario().getTipo().equalsIgnoreCase("estudiante")){
                        // Si es estudiante
                        JOptionPane.showMessageDialog(null, "¡Bienvenido " 
                        + estructuras.Estructuras.ldo_usuarios.
                        buscarNodo(Integer.parseInt(usuario_txt.getText())).
                        getUsuario().getNombre() + "!", 
                        "Estudiante", JOptionPane.INFORMATION_MESSAGE);
                        // Se redirige al area de trabajo de estudiantes
                        this.setVisible(false);
                        new AreaEstudiante(usuario_txt.getText()).setVisible(true);
                    }else if(estructuras.Estructuras.ldo_usuarios.
                    buscarNodo(Integer.parseInt(usuario_txt.getText())).
                    getUsuario().getTipo().equalsIgnoreCase("colaborador")){
                        // Si es colaborador
                        JOptionPane.showMessageDialog(null, "¡Bienvenido " 
                        + estructuras.Estructuras.ldo_usuarios.
                        buscarNodo(Integer.parseInt(usuario_txt.getText())).
                        getUsuario().getNombre() +  "!",
                        "Colaborador", JOptionPane.INFORMATION_MESSAGE);
                        // Se redirige al area de trabajo de colaboradores
                        this.setVisible(false);
                        new AreaColaborador().setVisible(true);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "¡Contrasena incorrecta para el usuario con ID: "
                    + usuario_txt.getText() + "!", 
                    "Atencion", JOptionPane.ERROR_MESSAGE);
                }
            }else{
                JOptionPane.showMessageDialog(null, "¡No existe el usuario con ID: "
                + usuario_txt.getText() + "!", 
                "Atencion", JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, "¡No se han cargado los usuarios!", 
            "Atencion", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_login_btActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException, InterruptedException {
// ::::::::::::::::::::::::::::::::     INICIA TEST    ::::::::::::::::::::::::::::::::
    // ||||||||||||||||||||||||||||     INICIA AVL      ||||||||||||||||||||||||||||
//        ArbolAVL catest = new ArbolAVL();
//        catest.insertar(new Catedratico(1, "Marioco", "Z1"));
//        catest.insertar(new Catedratico(10, "Rocio", "Z6"));
//        catest.insertar(new Catedratico(8, "Diana", "Z4"));
//        catest.insertar(new Catedratico(77, "Ruth", "Z2"));
//        catest.insertar(new Catedratico(100, "Claudia", "Z14"));
//        catest.insertar(new Catedratico(14, "Lady", "Z2"));
//        catest.insertar(new Catedratico(22, "Espino", "Z11"));
//        catest.insertar(new Catedratico(54, "Bertha", "Z8"));
//        catest.inorder();
//        catest.editar(10, "Martha", "Z22");
//        catest.inorder();
//        catest.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN AVL         ||||||||||||||||||||||||||||
       // ||||||||||||||||||||||||||||     INICIA LSOS      ||||||||||||||||||||||||||||
//        ListaSO_S lsos = new ListaSO_S();
//        lsos.insertar(new NodoSO_S(new Salon(110, "T4", 200)));
//        lsos.insertar(new NodoSO_S(new Salon(210, "T4", 200)));
//        lsos.insertar(new NodoSO_S(new Salon(310, "T4", 200)));
//        lsos.insertar(new NodoSO_S(new Salon(410, "T4", 200)));
//        lsos.insertar(new NodoSO_S(new Salon(114, "T4", 200)));
//        lsos.insertar(new NodoSO_S(new Salon(305, "T4", 200)));
//        lsos.mostrar();
//        lsos.modificar(310, "T44", 450);
//        lsos.eliminar(110);
//        lsos.eliminar(305);
//        lsos.eliminar(410);
//        lsos.mostrar();
//        lsos.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN LSOS         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA LDC      ||||||||||||||||||||||||||||
//        ListaDC_E ldc = new ListaDC_E();
//        ldc.insertar(new NodoDC_E(new Edificio("T1"), null));
//        ldc.insertar(new NodoDC_E(new Edificio("T1"), null));
//        ldc.insertar(new NodoDC_E(new Edificio("T3"), null));
//        ldc.insertar(new NodoDC_E(new Edificio("S11"), lsos));
//        ldc.insertar(new NodoDC_E(new Edificio("T7"), null));
//        ldc.insertar(new NodoDC_E(new Edificio("T9"), null));
//        ldc.insertar(new NodoDC_E(new Edificio("M2"), null));
//        ldc.insertar(new NodoDC_E(new Edificio("Biblioteca central"), null));
//        ldc.insertar(new NodoDC_E(new Edificio("Iglu"), lsos));
//        ldc.mostrar();
//        ldc.eliminar("Biblioteca central");
//        ldc.eliminar("S11");
//        ldc.eliminar("T9");
//        ldc.mostrar();
//        ldc.modificar("T3", "T33");
//        ldc.mostrar();
//        ldc.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN LDC         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA LDO      ||||||||||||||||||||||||||||
//        ListaDO_U ldo = new ListaDO_U();
//        ldo.insertar(new NodoDO_U(new Usuario(2, "Mario", "Rockw8u28", "AreaColaborador")));
//        ldo.insertar(new NodoDO_U(new Usuario(1, "Ruth", "Love2999", "Usuario")));
//        ldo.insertar(new NodoDO_U(new Usuario(55, "Claudia", "Fisica12333", "AreaColaborador")));
////        ldo.insertar(new NodoDO_U(new Usuario(1, "Ruth", "Love2999", "Usuario")));
//        ldo.insertar(new NodoDO_U(new Usuario(1100, "Rocio", "Love292119", "Usuario")));
//        ldo.insertar(new NodoDO_U(new Usuario(34, "Diana", "Love299129", "Usuario")));
//        ldo.insertar(new NodoDO_U(new Usuario(13, "Lady", "dasoiio", "AreaColaborador")));
//        ldo.mostrar();
//        ldo.eliminar(1100);
//        ldo.eliminar(1);
//        ldo.eliminar(34);
////        ldo.eliminar(2);
//        ldo.mostrar();
//        ldo.modificar(55, "Claudio", "root289");
//        ldo.mostrar();        
//        ldo.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN LDO         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA LSOC      ||||||||||||||||||||||||||||
//        ListaSO_C lsoc = new ListaSO_C();
//        lsoc.insertar(new NodoSO_C(new Curso(769, "EDD", 5, 5)));
//        lsoc.insertar(new NodoSO_C(new Curso(69, "COMPI1", 5, 5)));
//        lsoc.insertar(new NodoSO_C(new Curso(234, "Filosofia", 3, 5)));
//        lsoc.insertar(new NodoSO_C(new Curso(777, "IPC2", 3, 5)));
//        lsoc.insertar(new NodoSO_C(new Curso(937, "MA5", 6, 5)));
//        lsoc.mostrar();
//        lsoc.modificar(69, "Compiladores 1", 4, 6);
//        lsoc.eliminar(69);
//        lsoc.eliminar(769);
//        lsoc.eliminar(937);
//        lsoc.mostrar();
//        lsoc.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN LSOC         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA LS      ||||||||||||||||||||||||||||
//        ListaS lsa  = new ListaS();
//        lsa.insertar(new NodoS(new Asignacion(20138821, 455, 45, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20138821, 777, 65, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20148821, 23, 75, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20158821, 21, 37, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20168821, 655, 40, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20178821, 655, 40, 20)));
//        lsa.insertar(new NodoS(new Asignacion(20188821, 655, 40, 20)));
//        lsa.mostrar();
////        lsa.eliminar(20138821);
//        lsa.eliminar(20158821);
//        lsa.eliminar(20188821);
//        lsa.modificar(20138821, 666, 75, 25);
//        lsa.mostrar();
////        lsa.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN LS         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA TH      ||||||||||||||||||||||||||||
//        TablaHash tht = new TablaHash();
////        for (int i = 0; i < 50; i++) {
//            tht.insertar(new Estudiante(20131855, "Julia", "Z4"));
//            tht.insertar(new Estudiante(20131851, "Julia", "Z4"));
//            tht.insertar(new Estudiante(20131852, "Julia", "Z4"));
//            tht.insertar(new Estudiante(20131835, "Julia", "Z4"));
//            tht.insertar(new Estudiante(20131854, "Julia", "Z4"));
//            tht.insertar(new Estudiante(20131858, "Julia", "Z4"));
////        }
//        
//        tht.modificar(20131855, "Julio", "Z9");
//        tht.eliminar(20131858);
//        tht.graficar("grafo");
//        
//        tht.mostrar();
    // ||||||||||||||||||||||||||||     FIN TH         ||||||||||||||||||||||||||||
    // ||||||||||||||||||||||||||||     INICIA B      ||||||||||||||||||||||||||||
//        ArbolB<Horario> bt= new ArbolB<Horario>(5);
//        bt.Insertar(new Horario(1, 23, 44, 33, 20, "12:43", "Lunes"), null);
//        bt.Insertar(new Horario(2, 24, 45, 34, 21, "12:43", "Martes"), null);
//        bt.Insertar(new Horario(3, 25, 46, 63, 22, "12:43", "Sabado"), lsa);
//        bt.Insertar(new Horario(4, 26, 47, 64, 23, "12:43", "Domingo"), null);
//        bt.Insertar(new Horario(5, 27, 48, 65, 24, "12:43", "lunes"), null);
//        bt.Insertar(new Horario(6, 28, 49, 66, 25, "12:43", "urtio"), null);
//        bt.Insertar(new Horario(7, 29, 00, 67, 26, "12:43", "Sabado"), null);
//        bt.Insertar(new Horario(17, 29, 00, 67, 26, "12:43", "Sabado"), lsa);
////        bt.Insertar(new Horario(67, 29, 00, 67, 26, "12:43", "Sabado"), lsa);
//        System.out.println("Buscando por codigo");
//        System.out.println("\nCodigo encontrado: " + bt.buscarPorParametro(4).getHorario().getCodigo() + "\n");
//        bt.Imprimir();
////        bt.graficar("grafo");
//        estructuras.Estructuras.b_horarios.Insertar(new Horario(1, 23, 44, 33, 20, "12:43", "Lunes"), null);
//        estructuras.Estructuras.b_horarios.Insertar(new Horario(2, 24, 45, 34, 21, "12:43", "Martes"), null);
//        estructuras.Estructuras.b_horarios.Insertar(new Horario(3, 25, 46, 63, 22, "12:43", "Sabado"), lsa);
//        estructuras.Estructuras.b_horarios.Insertar(new Horario(4, 26, 47, 64, 23, "12:43", "Domingo"), null);
//        estructuras.Estructuras.b_horarios.Insertar(new Horario(5, 27, 48, 65, 24, "12:43", "lunes"), null);
//        estructuras.Estructuras.b_horarios.Insertar(new Horario(6, 28, 49, 66, 25, "12:43", "urtio"), null);
//        estructuras.Estructuras.b_horarios.Insertar(new Horario(7, 29, 00, 67, 26, "12:43", "Sabado"), null);
//        estructuras.Estructuras.b_horarios.Insertar(new Horario(17, 29, 00, 67, 26, "12:43", "Sabado"), lsa);
////        bt.Insertar(new Horario(67, 29, 00, 67, 26, "12:43", "Sabado"), lsa);
//        System.out.println("Buscando por codigo");
////        System.out.println("\nCodigo encontrado: " + bt.buscarPorParametro(4).getHorario().getCodigo() + "\n");
//        estructuras.Estructuras.b_horarios.Imprimir();
//        estructuras.Estructuras.b_horarios.graficar("grafo");
    // ||||||||||||||||||||||||||||     FIN B         ||||||||||||||||||||||||||||
// ::::::::::::::::::::::::::::::::     FIN TEST    ::::::::::::::::::::::::::::::::
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField contrasena_pass;
    private javax.swing.JLabel contrasena_usaurio_lb;
    private javax.swing.JLabel id_usuario_lb;
    private javax.swing.JButton login_bt;
    private javax.swing.JLabel login_titulo_lb;
    private javax.swing.JTextField usuario_txt;
    // End of variables declaration//GEN-END:variables
}
